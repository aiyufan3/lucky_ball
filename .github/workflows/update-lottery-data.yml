name: Update Lottery Data

on:
  schedule:
    # 每天晚上23点运行 (UTC+8时区，对应UTC时间15:00)
    - cron: '0 15 * * *'
  workflow_dispatch: # 允许手动触发
  push:
    branches: [ main ]  # 推送到main分支时触发
  pull_request:
    branches: [ main ]  # PR合并到main分支时触发
    types: [ closed ]   # 只在PR关闭时触发

jobs:
  update-data:
    runs-on: ubuntu-latest
    # 确保PR只在合并时运行，而不是简单关闭时运行
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas numpy matplotlib seaborn beautifulsoup4
        
    - name: Run lottery data analyzer
      run: |
        python lottery_analyzer.py
        
    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code lottery_data.json analysis_report.md || echo "changed=true" >> $GITHUB_OUTPUT
        
    - name: Commit and push if changed
      if: steps.git-check.outputs.changed == 'true'
      run: |
        git config --local user.email "snjyor@gmail.com"
        git config --local user.name "snjyor"
        git add lottery_data.json
        git add analysis_report.md
        git add lottery_frequency_analysis.png
        git commit -m "🎯 更新双色球数据 - $(date +'%Y-%m-%d %H:%M:%S')"
        git push
        
    - name: Create release on major updates
      if: steps.git-check.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 获取当前日期作为tag
        TAG_NAME="data-$(date +'%Y%m%d')"
        
        # 检查tag是否已存在
        if ! git tag | grep -q "^$TAG_NAME$"; then
          # 创建tag和release
          git tag $TAG_NAME
          git push origin $TAG_NAME
          
          # 创建release notes
          cat > release_notes.md << EOF
        ## 🎯 双色球数据更新 - $(date +'%Y年%m月%d日')
        
        ### 📊 本次更新内容
        - 抓取最新双色球开奖数据
        - 更新统计分析图表
        - 刷新号码频率分析
        - 更新分析报告文档
        
        ### 📁 更新文件
        - \`lottery_data.json\` - 最新开奖数据
        - \`analysis_report.md\` - 详细分析报告
        - \`lottery_frequency_analysis.png\` - 频率分析图表
        
        ### ⚠️ 免责声明
        本数据仅供学习和统计分析使用，彩票开奖完全随机，请理性购彩。
        EOF
          
          # 使用GitHub CLI创建release
          gh release create $TAG_NAME \
            --title "数据更新 $TAG_NAME" \
            --notes-file release_notes.md \
            lottery_data.json \
            analysis_report.md \
            lottery_frequency_analysis.png
        fi 