name: 更新彩票数据和分析报告

on:
  schedule:
    # 每天晚上23:00 (UTC+8) 运行，对应 15:00 UTC
    - cron: '0 15 * * *'
  workflow_dispatch: # 允许手动触发
  push:
    branches: [ main ]  # 推送到main分支时触发
  pull_request:
    branches: [ main ]  # PR合并到main分支时触发
    types: [ closed ]   # 只在PR关闭时触发

permissions:
  contents: write

jobs:
  update-lottery-data:
    runs-on: ubuntu-latest
    env:
      HEARTBEAT: "true"   # 若希望仅在真实数据变化时提交，将其改为 "false"
    # 确保PR只在合并时运行，而不是简单关闭时运行
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 缓存pip依赖
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas numpy matplotlib seaborn beautifulsoup4 hjson DrissionPage
        pip install scipy statsmodels

        # 安装 CPU 版 PyTorch（避免 CUDA 依赖）
        pip install torch --index-url https://download.pytorch.org/whl/cpu || true

        # DrissionPage 如需浏览器，请在需要时开启以下脚本（默认关闭以加快执行速度）
        # echo "安装Chrome浏览器..."
        # wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        # echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        # sudo apt-get update
        # sudo apt-get install -y google-chrome-stable
        # google-chrome --version
        # export DISPLAY=:99

    - name: 运行数据抓取与分析 (双色球 + 快乐8)
      run: |
        echo "开始运行数据分析..."
        exit_code=0

        if [ -f "lottery_analyzer.py" ]; then
          echo "[SSQ] 运行 lottery_analyzer.py ..."
          python lottery_analyzer.py || exit_code=$?
        else
          echo "[SSQ] 未找到 lottery_analyzer.py，跳过"
        fi

        if [ -f "scripts/super_eight.py" ]; then
          echo "[KL8] 运行 scripts/super_eight.py ..."
          python scripts/super_eight.py --fetch --limit 200 --recommend 5 --plots --plots_dual --report --seed 42 || exit_code=$?
        elif [ -f "super_eight.py" ]; then
          echo "[KL8] 运行 super_eight.py ..."
          python super_eight.py --fetch --limit 200 --recommend 5 --plots --plots_dual --report --seed 42 || exit_code=$?
        else
          echo "[KL8] 未找到 super_eight.py，跳过"
        fi

        echo "分析完成，退出码: $exit_code"

        if [ "$HEARTBEAT" = "true" ]; then
          mkdir -p .github
          date -u +"%Y-%m-%dT%H:%M:%SZ" > .github/.last_run_utc.txt
          echo "已写入心跳文件 .github/.last_run_utc.txt"
        fi

        echo "继续到文件变更检查步骤..."

    - name: 检查文件变更
      id: git-check
      run: |
        echo "检查文件变更..."
        # 仅在这些目录/文件存在时再比较
        TARGETS=()
        for p in data reports pics; do
          [ -e "$p" ] && TARGETS+=("$p")
        done
        [ -f ".github/.last_run_utc.txt" ] && TARGETS+=(".github/.last_run_utc.txt")
        [ -f "data/kl8_history.json" ] && TARGETS+=("data/kl8_history.json")
        [ -f "reports/kl8_analysis_report.md" ] && TARGETS+=("reports/kl8_analysis_report.md")
        [ -f "reports/kl8_profit_plan.md" ] && TARGETS+=("reports/kl8_profit_plan.md")
        [ -f "pics/kl8_frequency_hist.png" ] && TARGETS+=("pics/kl8_frequency_hist.png")
        [ -f "pics/kl8_ema_heatmap.png" ] && TARGETS+=("pics/kl8_ema_heatmap.png")
        [ -f "pics/kl8_overlap_compare.png" ] && TARGETS+=("pics/kl8_overlap_compare.png")
        [ -f "pics/kl8_dual_frequency_style.png" ] && TARGETS+=("pics/kl8_dual_frequency_style.png")
        if [ ${#TARGETS[@]} -eq 0 ]; then
          echo "未找到 data/ reports/ pics/ 目录或文件，视为无变化"
          echo "changed=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        CHANGED=false

        # 1) 检测未跟踪(新)文件
        UNTRACKED=$(git ls-files --others --exclude-standard -- "${TARGETS[@]}")
        if [ -n "$UNTRACKED" ]; then
          echo "发现未跟踪文件:"
          echo "$UNTRACKED"
          CHANGED=true
        fi

        # 2) 检测已跟踪文件的修改/删除
        if ! git diff --exit-code -- "${TARGETS[@]}" >/dev/null 2>&1; then
          echo "发现已跟踪文件修改/删除"
          CHANGED=true
        fi

        if [ "$CHANGED" = true ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "没有检测到文件变更"
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: 提交更新
      if: steps.git-check.outputs.changed == 'true'
      run: |
        echo "准备提交文件变更..."
        git config --local user.email "snjyor@gmail.com"
        git config --local user.name "snjyor"

        [ -e "data" ] && git add -A data || echo "data 目录不存在"
        [ -e "reports" ] && git add -A reports || echo "reports 目录不存在"
        [ -e "pics" ] && git add -A pics || echo "pics 目录不存在"
        [ -f ".github/.last_run_utc.txt" ] && git add .github/.last_run_utc.txt

        if git diff --cached --quiet; then
          echo "没有文件需要提交"
          exit 0
        fi

        commit_message="Update lottery data and analysis reports - $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S') (UTC+8)"
        git commit -m "$commit_message"
        git push
        echo "文件提交成功"

    - name: 创建重大更新的发布版本
      if: steps.git-check.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "准备创建发布版本..."
        TAG_NAME="$(TZ='Asia/Shanghai' date +'%Y%m%d')"
        if ! git tag | grep -q "^$TAG_NAME$"; then
          git tag $TAG_NAME
          git push origin $TAG_NAME

          NOTES=$'## 🎯 彩票数据更新 - '"$(TZ='Asia/Shanghai' date +'%Y年%m月%d日')"$' (UTC+8)\n\n'
          NOTES+=$'### 📊 本次更新内容\n'
          NOTES+=$'- 抓取最新开奖数据（双色球/快乐8）\n'
          NOTES+=$'- 更新统计分析图表\n'
          NOTES+=$'- 刷新号码频率与报告\n\n'
          NOTES+=$'### 📁 更新文件\n'
          NOTES+=$'**双色球数据：**\n'
          NOTES+=$'- data/lottery_data.json - 双色球开奖数据\n'
          NOTES+=$'- data/lottery_aggregated_data.hjson - 双色球聚合分析数据\n'
          NOTES+=$'- reports/double_color_ball_analysis_report.md - 双色球分析报告\n'
          NOTES+=$'- pics/lottery_frequency_analysis.png - 双色球频率图表\n\n'
          NOTES+=$'**快乐8数据：**\n'
          NOTES+=$'- data/kl8_history.json - 快乐8开奖数据\n'
          NOTES+=$'- reports/kl8_analysis_report.md - 快乐8分析报告\n'
          NOTES+=$'- pics/kl8_frequency_hist.png, pics/kl8_ema_heatmap.png, pics/kl8_overlap_compare.png, pics/kl8_dual_frequency_style.png\n\n'
          NOTES+=$'### ⚠️ 免责声明\n'
          NOTES+=$'本数据仅供学习和统计分析使用，彩票开奖完全随机，请理性购彩。\n'

          upload_files=""
          [ -f "data/lottery_data.json" ] && upload_files="$upload_files data/lottery_data.json"
          [ -f "data/lottery_aggregated_data.hjson" ] && upload_files="$upload_files data/lottery_aggregated_data.hjson"
          [ -f "reports/analysis_report.md" ] && upload_files="$upload_files reports/analysis_report.md"
          [ -f "pics/lottery_frequency_analysis.png" ] && upload_files="$upload_files pics/lottery_frequency_analysis.png"

          # KL8 artifacts
          [ -f "data/kl8_history.json" ] && upload_files="$upload_files data/kl8_history.json"
          [ -f "reports/kl8_analysis_report.md" ] && upload_files="$upload_files reports/kl8_analysis_report.md"
          [ -f "pics/kl8_frequency_hist.png" ] && upload_files="$upload_files pics/kl8_frequency_hist.png"
          [ -f "pics/kl8_ema_heatmap.png" ] && upload_files="$upload_files pics/kl8_ema_heatmap.png"
          [ -f "pics/kl8_overlap_compare.png" ] && upload_files="$upload_files pics/kl8_overlap_compare.png"
          [ -f "pics/kl8_dual_frequency_style.png" ] && upload_files="$upload_files pics/kl8_dual_frequency_style.png"

          if command -v gh >/dev/null 2>&1; then
            if [ -n "$upload_files" ]; then
              gh release create $TAG_NAME \
                --title "彩票数据更新 $TAG_NAME" \
                --notes "$NOTES" \
                $upload_files
              echo "发布版本创建成功，包含文件: $upload_files"
            else
              gh release create $TAG_NAME \
                --title "彩票数据更新 $TAG_NAME" \
                --notes "$NOTES"
              echo "发布版本创建成功，但没有数据文件可上传"
            fi
          else
            echo "⚠️ 未安装 gh CLI，跳过创建发布版本。"
          fi
        else
          echo "Tag $TAG_NAME 已存在，跳过创建发布版本"
        fi

    - name: 输出结果
      run: |
        if [ "${{ steps.git-check.outputs.changed }}" == "true" ]; then
          echo "✅ 彩票数据已更新并提交 - $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S') (UTC+8)"
          echo "📁 更新的文件:"
          [ -f "data/lottery_data.json" ] && echo "  ✓ 双色球开奖数据"
          [ -f "reports/analysis_report.md" ] && echo "  ✓ 双色球分析报告"
          [ -f "pics/lottery_frequency_analysis.png" ] && echo "  ✓ 双色球频率图表"
          [ -f ".github/.last_run_utc.txt" ] && echo "  ✓ 心跳文件 (.github/.last_run_utc.txt)"
        else
          echo "ℹ️ 彩票数据无变化，跳过提交 - $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S') (UTC+8)"
        fi